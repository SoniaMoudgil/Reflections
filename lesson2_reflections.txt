1.What happens when you initialize a repository? Why do you need to do it?

	git init
	It initializez or creates a new empty git repository for the present working dir where
we issue this command.It creates a hidden file .git which can be seen using ls -a
command.Ths is meta data about history of files stored in repository.
      
	We need to use git init - To make a new repository we use git init.
We can do this in empty dir and add files later or in existing dir.

--------------------------------------------------------------------------------
2.How is the staging area different from the working directory and the repository?
What value do you think it offers?

	Staging area contains those files from working area which we have chosen to 
commit to Repository.
--------------------------------------------------------------------------------
3.How can you use the staging area to make sure you have one commit per logical
change?
	If we add files to staging area according to logical change and commit those first.
Then we add next set of files to staging area from working directory and then commit
second set from staging area to repository, then we can have one commit per logical change.

--------------------------------------------------------------------------------
4.What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
	If we want to do some experimental feature or create version of file in 
another language like italian or some big change and dont want to keep it on master 
branch then we can create separate branches and keep working on them. Once new feature 
is working we can merge it with master branch.
--------------------------------------------------------------------------------
5.How do the diagrams help you visualize the branch structure?
--------------------------------------------------------------------------------
6.What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
--------------------------------------------------------------------------------
7.What are the pros and cons of Git’s automatic merging vs. always doing merges
manually?